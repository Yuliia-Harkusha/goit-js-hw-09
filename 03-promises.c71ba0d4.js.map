{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBA2BjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEJ,WAAUJ,SAElC,OAAO,IAAIS,SAAQ,SAACC,EAASC,GACvBN,EACFK,EAAQF,GAERG,EAAOH,E,IAhCbZ,EAAKC,QAAQe,iBAAiB,UAE9B,SAAoBC,GAClBA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OACxBhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAEzBC,EAAW,EAAGA,GAAYhB,EAAQgB,GAAY,EAErDf,EAAce,EADdH,GAASd,GAENkB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MACjBqB,YAAW,WACT3B,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,MAAK,CAAEyB,SAAS,G,GAC5EzB,E,IAEJ0B,OAAM,SAAAN,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAClBqB,YAAW,WACT3B,EAAA4B,OAAOK,QAAQ,sBAAqCH,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,MAAK,CAAEyB,SAAS,G,GACzEzB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formRef.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }  \n  });\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","addEventListener","e","preventDefault","delay1","Number","value","position1","then","param","setTimeout","Notify","success","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.c71ba0d4.js.map"}